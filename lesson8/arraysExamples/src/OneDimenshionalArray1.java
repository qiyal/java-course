/**
 * Данная программа демонстрирует базовую теорию по массивам.
 * Массив - это хранилище однотипной информации фиксированного размера.
 *
 * "Однотипной информации" - значит, что массив может хранить, например,
 * только целые числа, или только строки.
 *
 * "Фиксированного размера" - значит, что если создан массив на 10 элементов,
 * то больше 10 он вместить никогда не сможет и размер его всегда будет 10.
 *
 * В массиве элементы имеют свои индексы, т.е. номер позиции, на которой конкретный
 * элемент стоит в этом массиве.
 *
 * Индексация начинает с 0.
 * Т.е. если массив имеет размер 6, то самый первый элемент массива имеет индекс 0,
 * а самый последний - 5.
 *
 * У каждого массива есть специальная переменная "length",
 * которая равно его размеру.
 * Воспользоваться её можно, написав имя массива - точка - length.
 *
 * System.out.println(a.length);
 * Вернёт нам размер массива a.
 *
 * При создании массива, например, на 10 элементов, создаёт масcив с десятью нулями.
 * 0 0 0 0 0 0 0 0 0 0
 *
 * Т.е. изначально, при создании нового массива на определенное количество элементов,
 * во всех ячейках хранятся нули.
 */

import java.util.Scanner;

public class OneDimenshionalArray1 {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        /*
         * 1-ый способ создания массива.
         * С использованием так называемого initializer list
         * или по-другому "листа инициализации".
         *
         * Когда на одной строчке с объявлением массива идёт
         * список всех элементов, который в нём хранятся.
         */
        System.out.println("Создаём массив.");
        System.out.println("Называем его \"testArray1\"");
        System.out.println("Заполяем его элементами 78, 47, 12, 45, 69, 15, 42, 24");
        int [] testArray1 = {78, 47, 12, 45, 69, 15, 42, 24};

        /*
         * Чтобы обратиться к конкретному элементу массива,
         * необходимо написать имя массива и в квадратных скобках
         * индекс того элемента, к которому Вы хотите обратиться.
         */

        System.out.println("Обращаемся к 6-ому элементу массива: " + testArray1[5]);
        /*
         * В примере выше:
         * testArray1[5] - это ЭЛЕМЕНТ, который хранится в массиве под номером 5.
         * 5 - это ИНДЕКС элемента.
         */

        /*
         * 2-ой способ создания массива.
         * Без указания элементов.
         * Только имя массива и его размер.
         */

        System.out.println("\nСоздаём массив.");
        System.out.println("Называем его \"testArray2\"");
        System.out.println("Указываем его размер, равный 10.");
        int [] testArray2 = new int[10];

        /*
         * С помощью цикла for проходимся по всем элементам массива.
         * С 0-ого до 9-ого.
         * И вводим их с клавиатуры.
         */
        System.out.println("Заполняем массив с клавиатуры.");
        System.out.println("Введите 10 целых чисел: ");
        for(int i = 0; i < testArray2.length; i++)
            testArray2[i] = input.nextInt();

        /*
         * С помощью цикла for проходимся по всем элементам массива.
         * С 0-ого до 9-ого.
         * И выводим их на консоль.
         */
        System.out.print("Массив \"testArray2\" содержит следующие элементы: ");
        for(int i = 0; i < testArray2.length; i++)
            System.out.print(testArray2[i] + " ");

        /*
	 	Используя forEach цикл, запускаем iterator, который называется i, который пройдётся
	 	   по КАЖДОМУ элементу массива testArray2
	     */
        System.out.print("\nМассив \"testArray2\" содержит следующие элементы: ");
        for (int sanya : testArray2)
            System.out.print(sanya + " ");
    }
}
